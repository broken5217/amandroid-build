#!/bin/bash
export AMANDROID_DIST=true
java_version="1.8.0_66"
java_build_num="8.11.0.1"
scala_version="2.11.7"
os='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
  os='x86lx64'
elif [[ "$unamestr" == 'Darwin' ]]; then
  os='macosx'
fi
if [ $os == 'unknown' ]; then
  echo "Running on an unsupported platform! We only support 64-bit version of Linux, MacOSX."
  exit -1
fi

if !type wget >/dev/null 2>&1; then
  echo "ERROR: wget wasn't found."
  exit -1
fi

download=false
export AMANDROID_HOME=$( cd "$( dirname "$0" )" &> /dev/null && pwd )
if [ -d $AMANDROID_HOME/platform/java ]; then
  version=$(( $(${AMANDROID_HOME}/platform/java/bin/java -version) ) 2>&1)
  if [[ ! $version =~ .*${java_version}.* ]]; then
    download=true
  fi
else
  download=true
fi
if $download ; then
  rm -rf $AMANDROID_HOME/platform/java
  function startdownload() {
    BASE_URL="http://cdn.azulsystems.com/zulu/bin/"
    FILENAME="zulu${java_version}-${java_build_num}-${os}.zip"
    wget --no-verbose --referer=http://www.azulsystems.com/products/zulu/downloads -q -c --show-progress "${BASE_URL}${FILENAME}" -O "${AMANDROID_HOME}/platform/${FILENAME}" && {\
      download=false
      unzip "${AMANDROID_HOME}/platform/${FILENAME}" -d "${AMANDROID_HOME}/platform" &> /dev/null
      rm -rf "${AMANDROID_HOME}/platform/${FILENAME}"
      mv "${AMANDROID_HOME}/platform/zulu${java_version}-${java_build_num}-${os}" "${AMANDROID_HOME}/platform/java"
      rm -f $0.jar
      export RELOAD=true
    }
  }
  startdownload
fi
if $download ; then
  echo "Fail to download java. You can download ${java_version} manually from https://www.azul.com/products/zulu/ then unzip it as ${AMANDROID_HOME}/platform/java"
  exit -1
fi
if [ -d $AMANDROID_HOME/platform/scala ]; then
  version=$(( $(${AMANDROID_HOME}/platform/scala/bin/scala -version) ) 2>&1)
  if [[ ! $version =~ .*${scala_version}.* ]]; then
    download=true
  fi
else
  download=true
fi
if $download ; then
  rm -rf $AMANDROID_HOME/platform/scala
  function startdownload() {
    BASE_URL="http://downloads.lightbend.com/scala/${scala_version}/"
    FILENAME="scala-${scala_version}.tgz"
    wget -q -c --show-progress -O "${AMANDROID_HOME}/platform/${FILENAME}" --no-check-certificate --no-cookies "${BASE_URL}${FILENAME}"  && {\
      download=false
      tar -zxf "${AMANDROID_HOME}/platform/${FILENAME}" -C "${AMANDROID_HOME}/platform" &> /dev/null
      rm -rf "${AMANDROID_HOME}/platform/${FILENAME}"
      mv "${AMANDROID_HOME}/platform/scala-${scala_version}" "${AMANDROID_HOME}/platform/scala"
      rm -f $0.jar
      export RELOAD=true
    }
  }
  startdownload
fi
if $download ; then
  echo "Fail to download scala. You can download ${scala_version} manually from http://www.scala-lang.org/download/ then unzip it as ${AMANDROID_HOME}/platform/scala."
  exit -1
fi
export JAVA_HOME=$AMANDROID_HOME/platform/java
export SCALA_HOME=$AMANDROID_HOME/platform/scala
export PATH=$SCALA_HOME/bin:$JAVA_HOME/bin:$PATH
if [ "$RELOAD" == "true" ]; then
  export RELOAD=false
  echo "Reloading Amandroid..."
  echo
  exec "$0" "$@"
fi
if [ -f $0.jar ]; then
  if [ $0 -nt $0.jar ]; then
    echo "Please wait while Amandroid is loading..."
    echo
  fi
else
  echo "Please wait while Amandroid is loading..."
  echo
fi
echo $SCALA_OPTIONS
scala -target:jvm-1.8 -nocompdaemon -savecompiled $SCALA_OPTIONS $0 $AMANDROID_HOME "$@"
code=$?
exit $code
!#
AmandroidMain.main(args)